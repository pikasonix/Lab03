package hust.soict.dsai.aims;

import java.util.InputMismatchException;
import java.util.Scanner;

import hust.soict.dsai.aims.cart.Cart;
import hust.soict.dsai.aims.media.*;
import hust.soict.dsai.aims.store.Store;

public class Aims {
    private static final Store store = new Store();
    private static final Cart cart = new Cart();
    private static final Scanner scanner = new Scanner(System.in);

    public enum MainMenuOption {
        VIEW_STORE(1), UPDATE_STORE(2), SEE_CART(3), EXIT(0);
        private final int value;
        MainMenuOption(int value) { this.value = value; }
        public int getValue() { return value; }
    }

    public static void main(String[] args) {
        initSetup();
        mainMenuLoop();
        scanner.close();
    }

    private static void mainMenuLoop() {
        while (true) {
            showMenu();
            try {
                int choice = scanner.nextInt();
                scanner.nextLine(); // Clear buffer

                switch (MainMenuOption.values()[choice]) {
                    case VIEW_STORE:
                        storeMenu();
                        break;
                    case UPDATE_STORE:
                        updateStoreMenu();
                        break;
                    case SEE_CART:
                        cartMenu();
                        break;
                    case EXIT:
                        System.out.println("Good bye!");
                        return;
                    default:
                        handleInvalidOption();
                }
            } catch (InputMismatchException | ArrayIndexOutOfBoundsException e) {
                handleInvalidInput();
            }
        }
    }

    private static Media findMedia(String prompt, boolean fromStore) {
        while (true) {
            System.out.println(prompt);
            String title = scanner.nextLine();
            
            if ("0".equals(title)) {
                return null;
            }
            
            Media media = fromStore ? store.search(title) : cart.search(title);
            if (media != null) {
                return media;
            }
            
            System.out.println("***MEDIA NOT FOUND***");
        }
    }

    private static void playMedia(Media media) {
        if (media instanceof Playable) {
            ((Playable) media).play();
        } else {
            System.out.println("This type of media is not playable!");
        }
    }

    // Các phương thức khác như storeMenu(), cartMenu(), updateStoreMenu() 
    // sẽ được refactor tương tự, sử dụng các phương thức trợ giúp như findMedia() 
    // và playMedia() để giảm thiểu code trùng lặp

    private static void handleInvalidOption() {
        clearConsole();
        System.out.println("Invalid option, please choose again.");
    }

    private static void handleInvalidInput() {
        scanner.nextLine(); // Clear invalid input
        clearConsole();
        System.out.println("Invalid input. Please try again.");
    }

    public static void clearConsole() {
        for (int i = 0; i < 50; i++) {
            System.out.println();
        }
    }

    // Các phương thức khác như initSetup(), showMenu() vẫn giữ nguyên
}